version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: nvh_mysql
    restart: always
    environment:
      MYSQL_DATABASE: nvh_database
      MYSQL_USER: root
      MYSQL_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: 123456
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - nvh_network

  # Django 后端
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: nvh_backend
    restart: always
    environment:
      - DEBUG=False
      - SECRET_KEY=your-production-secret-key-here
      - DB_NAME=nvh_database
      - DB_USER=nvh_user
      - DB_PASSWORD=nvh_password_2024
      - DB_HOST=mysql
      - DB_PORT=3306
      - ALLOWED_HOSTS=117.72.42.68,localhost,127.0.0.1
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - mysql
    networks:
      - nvh_network
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             gunicorn nvh_backend.wsgi:application --bind 0.0.0.0:8000 --workers 3"

  # Vue 前端构建
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: nvh_frontend_build
    volumes:
      - frontend_dist:/app/dist

  # NGINX 反向代理
  nginx:
    image: nginx:alpine
    container_name: nvh_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - frontend_dist:/var/www/html
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - ./ssl:/etc/nginx/ssl  # SSL证书目录（如果需要HTTPS）
    depends_on:
      - backend
      - frontend
    networks:
      - nvh_network

volumes:
  mysql_data:
  static_volume:
  media_volume:
  frontend_dist:

networks:
  nvh_network:
    driver: bridge