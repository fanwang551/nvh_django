version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: nvh_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    networks:
      - nvh_network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Django后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: nvh_backend
    restart: always
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=mysql
      - DB_PORT=3306
      - ALLOWED_HOSTS=117.72.42.68,localhost,127.0.0.1
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - nvh_network

  # Vue前端构建
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - VITE_API_BASE_URL=http://117.72.42.68/api
    container_name: nvh_frontend
    volumes:
      - frontend_dist:/var/www/html

  # Nginx反向代理
  nginx:
    image: nginx:1.21-alpine
    container_name: nvh_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - frontend_dist:/var/www/html:ro
      - static_volume:/var/www/static:ro
      - media_volume:/var/www/media:ro
      # SSL证书目录（如需要HTTPS）
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - nvh_network

volumes:
  mysql_data:
  static_volume:
  media_volume:
  frontend_dist:

networks:
  nvh_network:
    driver: bridge
