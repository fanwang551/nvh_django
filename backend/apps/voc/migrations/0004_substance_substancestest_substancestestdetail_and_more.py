# Generated by Django 5.2.3 on 2025-10-27 05:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('voc', '0003_rename_vocresult_to_vocodorresult_and_add_odor_fields'),
    ]

    operations = [
        migrations.CreateModel(
            name='Substance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('substance_name_cn', models.CharField(max_length=100, verbose_name='物质中文名')),
                ('substance_name_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='物质英文名')),
                ('cas_no', models.CharField(max_length=50, unique=True, verbose_name='CAS号')),
                ('odor_threshold', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='嗅阈值(μg/m³)')),
                ('organic_threshold', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='有机物阈值')),
                ('limit_value', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='限值')),
                ('odor_character', models.CharField(blank=True, max_length=200, null=True, verbose_name='气味特性')),
                ('main_usage', models.TextField(blank=True, null=True, verbose_name='主要用途')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '物质库',
                'verbose_name_plural': '物质库',
                'db_table': 'substances',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SubstancesTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oi', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='气味污染指数Oi')),
                ('goi', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='气味污染贡献度GOi')),
                ('vi', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='有机污染指数Vi')),
                ('gvi', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='有机污染贡献度GVi')),
                ('test_date', models.DateTimeField(blank=True, null=True, verbose_name='检测时间')),
            ],
            options={
                'verbose_name': '全谱检测主表',
                'verbose_name_plural': '全谱检测主表',
                'db_table': 'substances_test',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='SubstancesTestDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('retention_time', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True, verbose_name='保留时间')),
                ('match_degree', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='匹配度(0-100)')),
                ('concentration', models.DecimalField(blank=True, decimal_places=6, max_digits=12, null=True, verbose_name='浓度(μg/m³)')),
                ('concentration_ratio', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='浓度占比(%)')),
                ('dilution_oij', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='稀释倍数Oij')),
                ('dilution_wih', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='挥发性有机物阈稀释倍数Wih')),
            ],
            options={
                'verbose_name': '全谱检测明细',
                'verbose_name_plural': '全谱检测明细',
                'db_table': 'substances_test_detail',
                'ordering': ['id'],
            },
        ),
        migrations.RenameIndex(
            model_name='vocodorresult',
            new_name='voc_odor_re_sample__f647d1_idx',
            old_name='voc_result_sample__e1e07d_idx',
        ),
        migrations.RenameIndex(
            model_name='vocodorresult',
            new_name='voc_odor_re_test_da_503694_idx',
            old_name='voc_odor_re_test_da_b7a1e2_idx',
        ),
        migrations.AddIndex(
            model_name='substance',
            index=models.Index(fields=['cas_no'], name='substances_cas_no_18a341_idx'),
        ),
        migrations.AddIndex(
            model_name='substance',
            index=models.Index(fields=['substance_name_cn'], name='substances_substan_f8187f_idx'),
        ),
        migrations.AddField(
            model_name='substancestest',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voc.sampleinfo', verbose_name='样品'),
        ),
        migrations.AddField(
            model_name='substancestestdetail',
            name='substance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voc.substance', verbose_name='物质'),
        ),
        migrations.AddField(
            model_name='substancestestdetail',
            name='substances_test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='voc.substancestest', verbose_name='全谱检测主表'),
        ),
        migrations.AddIndex(
            model_name='substancestest',
            index=models.Index(fields=['sample'], name='substances__sample__342ba7_idx'),
        ),
        migrations.AddIndex(
            model_name='substancestest',
            index=models.Index(fields=['test_date'], name='substances__test_da_c945c8_idx'),
        ),
        migrations.AddIndex(
            model_name='substancestestdetail',
            index=models.Index(fields=['substances_test'], name='substances__substan_1b6400_idx'),
        ),
        migrations.AddIndex(
            model_name='substancestestdetail',
            index=models.Index(fields=['substance'], name='substances__substan_9e683f_idx'),
        ),
    ]
