"""
# Generated by Codex CLI: Update DynamicStiffnessTest fields
 - Remove suspension_type
 - Make fields nullable except id, vehicle_model, part_name
 - Convert test_photo_path from CharField to JSONField (list of strings)
"""

from django.db import migrations, models


def migrate_photo_path_to_json(apps, schema_editor):
    DynamicStiffnessTest = apps.get_model('dynamic_stiffness', 'DynamicStiffnessTest')
    for obj in DynamicStiffnessTest.objects.all():
        try:
            value = getattr(obj, 'test_photo_path', None)
        except Exception:
            # When running after RemoveField, use the temp field
            value = None
        # If value is string, wrap into list; if None or empty, set empty list
        if isinstance(value, str):
            cleaned = value.strip()
            new_list = [cleaned] if cleaned else []
        elif isinstance(value, list):
            new_list = value
        elif value is None:
            new_list = []
        else:
            # Fallback: try to convert to list of strings
            try:
                new_list = list(value)
            except Exception:
                new_list = []
        # Write into the temporary JSON field
        setattr(obj, 'test_photo_path_json', new_list)
        obj.save(update_fields=['test_photo_path_json'])


class Migration(migrations.Migration):

    dependencies = [
        ('dynamic_stiffness', '0003_vehiclesuspensionisolationtest_and_more'),
    ]

    operations = [
        # Add temporary JSON field for photo paths
        migrations.AddField(
            model_name='dynamicstiffnesstest',
            name='test_photo_path_json',
            field=models.JSONField(blank=True, default=list, null=True, verbose_name='测试照片路径'),
        ),

        # Make certain fields nullable
        migrations.AlterField(
            model_name='dynamicstiffnesstest',
            name='test_date',
            field=models.DateField(blank=True, null=True, verbose_name='测试时间'),
        ),
        migrations.AlterField(
            model_name='dynamicstiffnesstest',
            name='test_engineer',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='测试人员'),
        ),
        migrations.AlterField(
            model_name='dynamicstiffnesstest',
            name='analysis_engineer',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='分析人员'),
        ),

        # Migrate existing char photo path to JSON list
        migrations.RunPython(migrate_photo_path_to_json, migrations.RunPython.noop),

        # Remove old char field and unwanted suspension_type
        migrations.RemoveField(
            model_name='dynamicstiffnesstest',
            name='test_photo_path',
        ),
        migrations.RemoveField(
            model_name='dynamicstiffnesstest',
            name='suspension_type',
        ),

        # Rename temp field to final name
        migrations.RenameField(
            model_name='dynamicstiffnesstest',
            old_name='test_photo_path_json',
            new_name='test_photo_path',
        ),
    ]

